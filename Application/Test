    private ColumnChartData data;
    private ColumnChartView mChartView;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_hello_bar_chart);
        mChartView = findViewById(R.id.line_chart);
        generateDefaultData();

    }

    private void generateDefaultData() {
        int numSubcolumns = 1;
        int numColumns = 20;
        // Column can have many subcolumns, here by default I use 1 subcolumn in each of 8 columns.
        List<Column> columns = new ArrayList<Column>();
        List<SubcolumnValue> values;
        for (int i = 0; i < numColumns; ++i) {

            values = new ArrayList<SubcolumnValue>();
            for (int j = 0; j < numSubcolumns; ++j) {
                values.add(new SubcolumnValue((float) Math.random() * 50f + 5, ChartUtils.pickColor()));
            }

            Column column = new Column(values);
            column.setHasLabels(true);
            column.setHasLabelsOnlyForSelected(true);
            columns.add(column);
        }

        data = new ColumnChartData(columns);

        if (true) {
            Axis axisX = new Axis();
            Axis axisY = new Axis().setHasLines(true);
            if (true) {
                axisX.setName("Axis X");
                axisY.setName("Axis Y");
            }
            data.setAxisXBottom(axisX);
            data.setAxisYLeft(axisY);
        } else {
            data.setAxisXBottom(null);
            data.setAxisYLeft(null);
        }
        mChartView.setColumnChartData(data);
        Viewport v = new Viewport(mChartView.getMaximumViewport());
        v.top = 7.2f;
        v.bottom = 5.4f;
        mChartView.setMaximumViewport(v);
        v.left = -0.2f;
        v.right = 6;
        mChartView.setCurrentViewport(v);
        mChartView.setZoomEnabled(false);//手势缩放
        mChartView.setInteractive(true);//设置图表是可以交互的（拖拽，缩放等效果的前提）
        mChartView.setZoomType(ZoomType.HORIZONTAL);//设置缩放方向
    }
